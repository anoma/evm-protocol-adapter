name: CI

on:
  push:
  workflow_dispatch:

jobs:
  contracts:
    name: Contracts
    runs-on: ubuntu-latest
    env:
      FOUNDRY_PROFILE: ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          cache: true

      - name: Show Foundry version
        run: forge --version

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Show Bun version
        run: bun --version
        working-directory: ./contracts

      - name: Install Solhint
        run: bun install solhint
        working-directory: ./contracts

      - name: Run Solhint in `src`
        run: bunx --bun solhint --config .solhint.json 'src/**/*.sol'
        working-directory: ./contracts

      - name: Run Forge build
        run: forge build --sizes --ast
        working-directory: ./contracts

      - name: Run Forge tests
        run: forge test -vvv --gas-report
        env:
          API_KEY_INFURA: ${{ secrets.API_KEY_INFURA }}
          API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
        working-directory: ./contracts

      - name: Upload Contract Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-artifacts
          path: ./contracts/out

  bindings:
    name: Bindings
    runs-on: ubuntu-latest
    needs: contracts
    env:
      PROTOCOL_ADAPTER_ADDRESS_SEPOLIA: ${{ vars.PROTOCOL_ADAPTER_ADDRESS_SEPOLIA }}
      API_KEY_INFURA: ${{ secrets.API_KEY_INFURA }}
      API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Contract Artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: ./contracts/out

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Rust toolchain and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ./bindings/target
          key: rust-build-${{ hashFiles('bindings/Cargo.toml') }}
          restore-keys: |
            rust-build-

      - name: Show Rust version
        run: rustc --version

      - name: Build Bindings
        run: cargo build --release
        working-directory: ./bindings

      - name: Run Tests
        run: cargo test --verbose
        working-directory: ./bindings